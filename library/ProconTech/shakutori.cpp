#include <algorithm>
#include <iostream>

using namespace std;

/* しゃくとり法
概要：条件を満たす最大長を求める。

例  ：同じA[i]が２個以上含まれない最大範囲を求める
○変数
N: リストの長さ
l: 左端の位置
r: 右端の位置
ans: 答え（条件を満たす最大長）


計算量：Ｏ(N)

*/

/*==================================================*/
int N;
int A[100010];

/*==================================================*/

/*==================================================*/

int main() {
	cin >> N;
	for (int i = 0; i < N; i++) cin >> A[i];

	int ans = 0;     // 同じA[i]が２個以上含まれない最大範囲
	int cnt[100010]; // A[i]の数
	for (int i = 0; i < N; i++) cnt[i] = 0;

	int l = 0, r = 0;

	// 左端は右端を追い越さない
	while (l <= r) {
		while (r < N) {
			if (cnt[A[r]] + 1 == 2) break; // 条件を満たさないなら右端を伸ばさない
			ans = max(ans, r - l + 1);
			cnt[A[r]]++;
			r++;     // 右端を伸ばす
		}

		cnt[A[l]]--;
		l++;         // 左端を伸ばす
	}

	cout << ans << endl;
	return 0;
}